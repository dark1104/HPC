from transformers import AutoTokenizer, AutoModelForCausalLM
import torch
import os
from huggingface_hub import login

# Load Hugging Face token from environment
hf_token = os.environ.get("HUGGINGFACE_HUB_TOKEN")

if not hf_token:
    raise ValueError("HUGGINGFACE_HUB_TOKEN is not set in environment!")

# Login to Hugging Face
login(token=hf_token)

model_name = "meta-llama/Meta-Llama-3-8B"

print("Loading tokenizer...")
tokenizer = AutoTokenizer.from_pretrained(model_name, use_auth_token=True)

print("Loading model...")
model = AutoModelForCausalLM.from_pretrained(
    model_name,
    torch_dtype=torch.float16 if torch.cuda.is_available() else torch.float32,
    device_map="auto",
    use_auth_token=True
)

def generate_text(prompt: str, max_new_tokens: int = 100) -> str:
    inputs = tokenizer(prompt, return_tensors="pt").to(model.device)
    outputs = model.generate(**inputs, max_new_tokens=max_new_tokens)
    return tokenizer.decode(outputs[0], skip_special_tokens=True)
